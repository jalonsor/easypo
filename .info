#HTMCONSTS

C
NODETYPE_ELEMENT
C
i
1
'**** Constantes y Utilidades para el Parser
'*** NodeType Constants:	http://www.w3schools.com/jsref/prop_node_nodetype.asp
NODETYPE_ATTRIBUTE
C
i
2
NODETYPE_TEXT
C
i
3
NODETYPE_CDATA
C
i
4
NODETYPE_ENTITY_REFERENCE
C
i
5
NODETYPE_ENTITY
C
i
6
NODETYPE_PROCESSING_INSTRUCTION
C
i
7
NODETYPE_COMMENT
C
i
8
NODETYPE_DOCUMENT
C
i
9
NODETYPE_DOCUMENT_TYPE
C
i
10
NODETYPE_DOCUMENT_FRAGMENT
C
i
11
NODETYPE_NOTATION
C
i
12
#HTMDocument
_HTMCONSTS
C
className
r
s

classVersion
r
s

classDescription
r
s

classVendor
r
s

innerHTML
p
s

text
p
s

removeBlankText
p
b

timeLoadString
r
i

timeLoadFile
r
i

timeBuildDOM
r
i

document
v
HTMDocument

readyState
v
b

strictErrorChecking
v
b

root
v
HTMElement

documentElement
v
HTMElement

head
v
HTMElement

favicon
v
HTMElement

title
v
HTMElement

body
v
HTMElement

cookie
v
HTMElement[]

anchors
v
HTMElement[]

applets
v
HTMElement[]

embeds
v
HTMElement[]

objects
v
HTMElement[]

forms
v
HTMElement[]

images
v
HTMElement[]

links
v
HTMElement[]

metas
v
HTMElement[]

linkRels
v
HTMElement[]

scripts
v
HTMElement[]

comments
v
HTMElement[]

texts
v
HTMElement[]

baseURI
v
s

doctype
v
s

documentMode
v
s

documentURI
v
s

domain
v
s

domConfig
v
s

implementation
v
s

inputEncoding
v
s

lastModified
v
s

referrer
v
s

URL
v
s

_new
m

[(strHtml)s(removeBlankText)b]
_free
m


fromString
m

(strHtml)s[(removeBlankText)b]
fromFile
m
b
(strFilepath)s[(removeBlankText)b]
domTree
m
s
[(printIt)b]
objectStats
m
s
[(printIt)b]
getElementById
m
HTMElement
(id)s
getElementsByTagName
m
HTMElement[]
(tagName)s
getElementsByName
m
HTMElement[]
(Name)s
getElementsByClassName
m
HTMElement[]
(className)s
querySelectorAll
m
HTMElement[]
(strCSSSelector)s
getByPseudoXPath
m
HTMElement[]
(pseudoXPath)s
selectNodes
m
HTMElement[]
(pseudoXPath)s
evaluate
m
HTMElement[]
(pseudoXPath)s
createElement
m
HTMElement
(strTag)s
createTextNode
m
HTMElement
(str)s
createCommentNode
m
HTMElement
(str)s
removeChild
m
HTMElement
(obElm)HTMElement;
appendChild
m
HTMElement
(obElm)HTMElement;
replaceChild
m
HTMElement
(obNewElm)HTMElement;(obOldElm)HTMElement;
write
m
b
.
appendText
m
b
(text)s
#HTMElement
_HTMCONSTS
C
innerHTML
p
s

innerTEXT
p
s

tagName
v
s

id
v
s

name
v
s

class
v
s

style
v
s

type
v
s

nodeType
v
i

nodeValue
v
s

attributes
v
Collection

parentNode
v
HTMElement

firstChild
v
HTMElement

lastChild
v
HTMElement

nextSibling
v
HTMElement

previousSibling
v
HTMElement

childNodes
v
HTMElement[]

_new
m

(obDocument)HTMDocument;[(strHtmlElem)s]
_free
m


elementTree
m
s
[(printIt)b]
appendChild
m
HTMElement
(obElm)HTMElement;
insertBefore
m
HTMElement
(obNewElm)HTMElement;(obExistingElm)HTMElement;
removeChild
m
HTMElement
(obElm)HTMElement;
replaceChild
m
HTMElement
(obNewElm)HTMElement;(obOldElm)HTMElement;
#_HTMCONSTS

C
NODETYPE_ELEMENT
C
i
1
'**** Constantes y Utilidades para el Parser
'*** NodeType Constants:	http://www.w3schools.com/jsref/prop_node_nodetype.asp
NODETYPE_ATTRIBUTE
C
i
2
NODETYPE_TEXT
C
i
3
NODETYPE_CDATA
C
i
4
NODETYPE_ENTITY_REFERENCE
C
i
5
NODETYPE_ENTITY
C
i
6
NODETYPE_PROCESSING_INSTRUCTION
C
i
7
NODETYPE_COMMENT
C
i
8
NODETYPE_DOCUMENT
C
i
9
NODETYPE_DOCUMENT_TYPE
C
i
10
NODETYPE_DOCUMENT_FRAGMENT
C
i
11
NODETYPE_NOTATION
C
i
12
tagCanHaveChild
m
b
(strTag)s
