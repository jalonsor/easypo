' Gambas class file


Inherits _HTMCONSTS

Export


''http://www.w3schools.com/js/js_htmldom.asp

Property innerHTML As String
Private $innerHTML As String
Property innerTEXT As String
Private $innerTEXT As String

Private $obDocument As HTMDocument 	''Reference to Document Object to operate references.

Public tagName As String
Public id As String
Public name As String
Public (class) As String
Public style As String
Public type As String
Public nodeType As Byte
Public nodeValue As String ''for element nodes is undefined. or text nodes is the text itself. or attribute nodes is the attribute value.
Public attributes As New Collection

Public parentNode As HTMElement = Null
Public firstChild As HTMElement = Null
Public lastChild As HTMElement = Null
Public nextSibling As HTMElement = Null
Public previousSibling As HTMElement = Null
Public childNodes As New HTMElement[]


''Constructores y Propiedades
Public Sub _new(obDocument As HTMDocument, Optional strHtmlElem As String = Null)
  $obDocument = obDocument
  
  If strHtmlElem = Null Or Len(strHtmlElem) = 0 Then Return
  $innerHTML = strHtmlElem
  initElement
End

Public Sub _free() ''***Se invoca al destruir el objeto
  destroyELEMENT  ''Liberar Objetos y Referencias
End

Private Function innerHTML_Read() As String
  Return $innerHTML
End

Private Sub innerHTML_Write(Value As String)
  $innerHTML = Value
  initElement
End

Private Function innerTEXT_Read() As String
  Return $innerTEXT
End

Private Sub innerTEXT_Write(Value As String)
  $innerTEXT = Value
  initElement
End

'**** Lo gordo de construir el Element esta aqui ***
Private Sub initElement()

End

Private Sub destroyELEMENT()
	$innerHTML = Null
	$innerTEXT = Null

	$obDocument = Null

	tagName = Null
	id = Null
	name = Null
	(class) = Null
	style = Null
	type = Null
	nodeValue = Null
	attributes.Clear
	attributes = Null

	parentNode = Null
	firstChild = Null
	lastChild = Null
	nextSibling = Null
	previousSibling = Null
	childNodes.Clear
	childNodes = Null
End

Public Function elementTree(Optional printIt As Boolean = True) As String
  Dim strRet As String = ""
  ''TODO: elementTree
  Return strRet
End


''***** METHODS and PROPERTIES for Element: http://www.w3schools.com/jsref/dom_obj_all.asp


'
' element.attribute = New Value Change the attribute value Of an HTML element
' element.setAttribute(attribute, value)Change the attribute value Of an HTML element
' element.style.property = New Style Change the style Of an HTML element


Public Function appendChild(obElm As HTMElement) As HTMElement 	''Return Value: 	A Node Object, representing the appended node
  ''TODO: appendChild
End

Public Function insertBefore(obNewElm As HTMElement, obExistingElm As HTMElement) As HTMElement 	''Return Value: 	A Node Object, representing the inserted node
  ''TODO: insertBefore
End

Function insertAfter(obNewElm As HTMElement, obExistingElm As HTMElement) As HTMElement 	''Return Value: 	A Node Object, representing the inserted node
	Dim parent As HTMElement
    '~ //target is what you want it to go after. Look for this elements parent.
    parent = obExistingElm.parentNode

    '~ //if the parents lastchild is the targetElement...
    If parent.lastchild = obExistingElm Then
        '~ //add the newElement after the target element.
        parent.appendChild(obNewElm)
	Else
        '~ // else the target has siblings, insert the new element between the target and it's next sibling.
        parent.insertBefore(obNewElm, obExistingElm.nextSibling)
    Endif
	
	Return obNewElm
End

Public Function removeChild(obElm As HTMElement) As HTMElement 	''Return Value: 	A Node object, representing the removed node, or null if the node does not exist
  ''TODO: removeChild
End


Public Function replaceChild(obNewElm As HTMElement, obOldElm As HTMElement) As HTMElement 	''Return Value: 	A Node object, representing the replaced node
  ''TODO: replaceChild
End




